.. note::

    こんにちは、SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts Communityへようこそ！Facebook上で、仲間と一緒にRaspberry Pi、Arduino、ESP32をさらに深く探求しましょう。

    **なぜ参加するのか？**

    - **専門的なサポート**：購入後の問題や技術的な課題をコミュニティやチームの助けを借りて解決。
    - **学びと共有**：スキルを向上させるためのヒントやチュートリアルを交換。
    - **限定プレビュー**：新製品発表や予告編に早期アクセス。
    - **特別割引**：最新製品の特別割引を楽しむ。
    - **フェスティブプロモーションとプレゼント**：プレゼントやホリデープロモーションに参加。

    👉 私たちと一緒に探索と創造を始める準備はできましたか？[|link_sf_facebook|]をクリックして、今すぐ参加しましょう！

.. _cpn_i2c_lcd1602:

I2C LCD 1602
==========================

.. image:: img/26_i2c_lcd.png
    :width: 90%
    :align: center

.. raw:: html

   <br/>

I2C LCD1602は、I2Cプロトコルを使用して16x2（16列と2行）の液晶ディスプレイ（LCD）にテキストや文字を表示できるデバイスです。Arduinoプロジェクトからのセンサーの読み取り値、メッセージ、メニューなどの情報を表示するためにI2C LCD1602を使用できます。I2Cモジュールには、I2CシリアルデータをLCDディスプレイ用の並列データに変換するPCF8574 I2Cチップが内蔵されています。

* |link_PCF8574_Datasheet|

原理
---------------------------
I2C LCD1602は、通常のLCD1602とその背面に取り付けられたI2Cモジュールで構成されています。I2Cモジュールは、I2Cプロトコルを使用してArduinoのI/Oポートを拡張できるチップです。I2Cプロトコルは、SDA（シリアルデータ）とSCL（シリアルクロック）の2本のワイヤーを使用するシリアル通信プロトコルです。I2Cプロトコルを使用すると、2本のワイヤーと固有のアドレスを使用して複数のデバイスが相互に通信できます。

I2Cモジュールは、Arduinoからの信号をLCD用のコマンドに変換します。LCDには文字や記号を表示できる16x2のセルがあります。各セルは、電圧をかけることでオンまたはオフにできる5x8のドットで構成されています。LCDは、異なるドットの組み合わせをオンまたはオフにすることで、異なる文字や記号を表示できます。

.. image:: img/26_ic2_lcd_2.png
    :width: 500
    :align: center

.. raw:: html
    
    <br/><br/> 

**I2Cアドレス**

デフォルトアドレスは基本的に0x27ですが、場合によっては0x3Fになることもあります。

デフォルトアドレス0x27を例にとると、A0/A1/A2パッドを短絡させることでデバイスアドレスを変更できます。デフォルト状態では、A0/A1/A2は1であり、パッドを短絡させるとA0/A1/A2は0になります。

.. image:: img/26_i2c_address.jpg
    :width: 600
    :align: center

.. raw:: html
    
    <br/>

**バックライト/コントラスト**

ジャンパーキャップでバックライトを有効にできます。ジャンパーキャップを取り外すとバックライトが無効になります。背面の青いポテンショメーターはコントラスト（最も明るい白と最も暗い黒の間の明るさの比率）を調整するために使用されます。

.. image:: img/26_back_lcd1602.jpg
    :width: 600
    :align: center

.. raw:: html
    
    <br/> 

* **ジャンパーキャップ**: バックライトはこのキャップで有効にでき、キャップを取り外すとバックライトが無効になります。
* **ポテンショメーター**: コントラスト（表示されるテキストの明瞭さ）を調整するために使用され、時計回りに回すと明瞭さが増し、反時計回りに回すと減少します。

.. note::
    LCDの配線後、Arduinoの電源を入れ、I2Cモジュール上のポテンショメーターを回して最初の行の矩形が表示されるまでコントラストを調整してください。これでLCDが正常に動作することを確認できます。


例
---------------------------
* :ref:`uno_lesson26_lcd` (Arduino UNO)
* :ref:`esp32_lesson26_lcd` (ESP32)
* :ref:`pico_lesson26_lcd` (Raspberry Pi Pico)
* :ref:`pico_lesson26_lcd` (Raspberry Pi)

* :ref:`uno_potentiometer_scale_value` (Arduino UNO)
* :ref:`uno_plant_monitor` (Arduino UNO)
* :ref:`uno_bluetooth_lcd` (Arduino UNO)
* :ref:`esp32_potentiometer_scale_value` (ESP32)
* :ref:`esp32_plant_monitor` (ESP32)
* :ref:`esp32_iot_owm` (ESP32)