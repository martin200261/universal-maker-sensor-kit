 
.. note::

   Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

   **Warum beitreten?**

   - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
   - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
   - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
   - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
   - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

   üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _cpn_rgb:

RGB LED-Modul
==========================

.. image:: img/28_rgb_module.png
    :width: 350
    :align: center

.. raw:: html

    <br/>

Das RGB-Farb-LED-Modul emittiert eine Vielzahl von Farben durch das Mischen von rotem, gr√ºnem und blauem Licht. Jede Farbe wird durch die Verwendung von PWM (Pulsweitenmodulation) angepasst. Es kann verwendet werden, um farbenfrohe Lichteffekte zu erzeugen oder um zu lernen, wie man PWM mit Arduino verwendet.

Pinbelegung
---------------------------

* **GND**: Gemeinsame Masse f√ºr die Stromversorgung.
* **B**: Steuert die Helligkeit der roten LED. Durch Anpassen des durch diesen Pin flie√üenden Stroms kann die Intensit√§t des roten Lichts variiert werden.
* **R**: Steuert die Helligkeit der gr√ºnen LED. √Ñhnlich wie beim roten Pin √§ndert sich die Intensit√§t des gr√ºnen Lichts durch Anpassen des Stromflusses durch diesen Pin.
* **G**: Steuert die Helligkeit der blauen LED. Durch Anpassen des durch diesen Pin flie√üenden Stroms kann die Intensit√§t des blauen Lichts ver√§ndert werden.

Funktionsprinzip
---------------------------
Das RGB-Modul arbeitet mit einer Vollfarb-LED, die die R-, G- und B-Pins mit einstellbarem PWM-Spannungseingang verwendet.
Farben aus der LED k√∂nnen kombiniert werden. Zum Beispiel ergibt die Mischung von blauem und gr√ºnem Licht cyanfarbenes Licht, rotes Licht und gr√ºnes Licht ergeben gelbes Licht. Dies wird als "additive Farbmischung" bezeichnet.

* `Additive color - Wikipedia <https://en.wikipedia.org/wiki/Additive_color>`_

.. image:: img/28_rgb_module_2.png
    :width: 200
    :align: center

Basierend auf dieser Methode k√∂nnen wir die drei Prim√§rfarben verwenden, um das sichtbare Licht jeder Farbe in unterschiedlichen Proportionen zu mischen. Zum Beispiel kann Orange durch mehr Rot und weniger Gr√ºn erzeugt werden. Die Intensit√§t der Prim√§rfarben (Rot, Blau, Gr√ºn) wird angepasst, um einen vollst√§ndigen Farbeffektemix zu erzielen. PWM ist eine Technik, bei der das Tastverh√§ltnis eines digitalen Signals ge√§ndert wird, um den Prozentsatz der Zeit anzupassen, in der das Signal innerhalb eines bestimmten Zeitraums aktiv bleibt. Durch √Ñndern des Tastverh√§ltnisses k√∂nnen wir die LED heller oder dunkler erscheinen lassen.

Schaltplan
---------------------------

.. image:: img/28_rgb_module_schematic.png
    :width: 100%
    :align: center

.. raw:: html

   <br/>

Beispiel
---------------------------
* :ref:`uno_lesson28_rgb_module` (Arduino UNO)
* :ref:`esp32_lesson28_rgb_module` (ESP32)
* :ref:`pico_lesson28_rgb_module` (Raspberry Pi Pico)
* :ref:`pi_lesson28_rgb_module` (Raspberry Pi)

* :ref:`esp32_lesson30_relay_module` (ESP32)
* :ref:`pico_lesson30_relay_module` (Raspberry Pi Pico)
* :ref:`pi_lesson30_relay_module` (Raspberry Pi)

* :ref:`uno_lesson38_gas_leak_alarm` (Arduino UNO)
* :ref:`uno_lesson40_motion_triggered_relay` (Arduino UNO)
* :ref:`esp32_gas_leak_alarm` (ESP32)
* :ref:`esp32_motion_triggered_relay` (ESP32)
* :ref:`esp32_bluetooth_led` (ESP32)
* :ref:`esp32_iot_mqtt` (ESP32)
* :ref:`esp32_adafruit_io` (ESP32)
* :ref:`esp32_iot_bluetooth_app` (ESP32)
