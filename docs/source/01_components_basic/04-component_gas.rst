 .. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _cpn_gas:

Gas-/Rauchsensormodul (MQ2)
=====================================

.. image:: img/04_mq2_gas_module.png
    :width: 350
    :align: center

.. tip::
   Der MQ2 ist ein sensor, der durch Heizung betrieben wird und normalerweise vor der Verwendung vorgeheizt werden muss. W√§hrend der Vorheizphase zeigt der Sensor typischerweise hohe Werte an, die allm√§hlich abnehmen, bis sie sich stabilisieren.

Der MQ-2-Sensor ist ein vielseitiger Gassensor, der eine breite Palette von Gasen erkennen kann, darunter Alkohol, Kohlenmonoxid, Wasserstoff, Isobutan, Fl√ºssiggas, Methan, Propan und Rauch. Er ist bei Anf√§ngern aufgrund seiner niedrigen Kosten und einfachen Handhabung beliebt.

Funktionsprinzip
---------------------------
Der MQ-2-Sensor arbeitet nach dem Prinzip der Widerstands√§nderung in Gegenwart verschiedener Gase. Wenn das Zielgas mit dem erhitzten MOS (Metalloxid-Halbleiter)-Material in Kontakt kommt, werden Oxidations- oder Reduktionsreaktionen ausgel√∂st, die den Widerstand des MOS-Materials ver√§ndern. **Es ist bemerkenswert, dass der MQ2-Gassensor in der Lage ist, mehrere Gase zu erkennen, aber nicht zwischen ihnen unterscheiden kann.** Dies ist eine h√§ufige Eigenschaft der meisten Gassensoren.

Der Sensor verf√ºgt √ºber ein eingebautes Potentiometer, mit dem Sie den Schwellenwert des digitalen Ausgangs (D0) einstellen k√∂nnen. Wenn die Gaskonzentration in der Luft einen bestimmten Schwellenwert √ºberschreitet, √§ndert sich der Widerstand des Sensors. Diese Widerstands√§nderung wird dann in ein elektrisches Signal umgewandelt, das von einem Arduino-Board gelesen werden kann.

Kalibrierung des MQ2-Gassensors
----------------------------------
Da der MQ2 ein heizgetriebener Sensor ist, kann die Kalibrierung des Sensors abweichen, wenn er √ºber einen l√§ngeren Zeitraum gelagert wird.
Bei der ersten Verwendung nach l√§ngerer Lagerung (einem Monat oder l√§nger) muss der Sensor 24-48 Stunden vollst√§ndig vorgeheizt werden, um maximale Genauigkeit zu gew√§hrleisten.
Wenn der Sensor k√ºrzlich verwendet wurde, dauert es nur 5-10 Minuten, um vollst√§ndig aufzuheizen. W√§hrend der Aufw√§rmphase zeigt der Sensor typischerweise hohe Werte an, die allm√§hlich abnehmen, bis sie sich stabilisieren.

Spezifikation
---------------------------
* Modell: MQ2
* Versorgungsspannung: 5V
* PCB-Gr√∂√üe: 32 x 20mm
* Ausgangssignaltyp: DO und AO
* Erkennungskonzentration: 300 bis 10000 ppm
* Vorheizdauer: √ºber 24 Stunden (beim ersten Mal)
* Erkennbares Gas: LPG, Alkohol, Propan, Wasserstoff, CO und sogar Methan

Pinbelegung
---------------------------
* **VCC**: Dies ist der positive Stromeingang von der Hauptsteuerung.
* **GND**: Masseanschluss.
* **DO**: Digitalausgang. Es zeigt das Vorhandensein von brennbaren Gasen an. Wenn die Gaskonzentration den Schwellenwert (wie durch das Potentiometer eingestellt) √ºberschreitet, wird D0 LOW; andernfalls ist es HIGH.
* **AO**: Analogausgang. Es erzeugt eine analoge Ausgangsspannung, die proportional zur Gaskonzentration ist, sodass eine h√∂here Konzentration zu einer h√∂heren Spannung und eine niedrigere Konzentration zu einer niedrigeren Spannung f√ºhrt.

Beispiel
---------------------------
* :ref:`uno_lesson04_mq2` (Arduino UNO)
* :ref:`esp32_lesson04_mq2` (ESP32)
* :ref:`pico_lesson04_mq2` (Raspberry Pi Pico)
* :ref:`pi_lesson04_mq2` (Raspberry Pi)

* :ref:`uno_lesson38_gas_leak_alarm` (Arduino UNO)
* :ref:`esp32_gas_leak_alarm` (ESP32)
