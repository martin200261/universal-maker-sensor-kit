 .. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!


Kurzanleitung zu Thonny
==================================

.. _open_run_code_py:

Code √∂ffnen und direkt ausf√ºhren
---------------------------------------------

In jedem von uns bereitgestellten Projekt ist der spezifische verwendete Code klar identifiziert. Sie finden den entsprechenden Code f√ºr jedes Projekt im Verzeichnis ``universal-maker-sensor-kit-main/pico/``.

Bevor Sie jedoch fortfahren, m√ºssen Sie das Paket herunterladen und die Bibliothek hochladen, wie in :ref:`add_libraries_py` beschrieben.

#. √ñffnen Sie den Code.

   Zum Beispiel ``Lesson_01_Button_Module\01_button_module.py``.

   Wenn Sie darauf doppelklicken, wird ein neues Fenster auf der rechten Seite ge√∂ffnet. Sie k√∂nnen mehr als einen Code gleichzeitig √∂ffnen.

   .. image:: img/05_open_code.png

#. W√§hlen Sie den richtigen Interpreter aus.

   Verwenden Sie ein Micro-USB-Kabel, um den Pico W mit Ihrem Computer zu verbinden, und w√§hlen Sie den Interpreter "MicroPython (Raspberry Pi Pico)" aus.

   .. image:: img/05_sec_inter.png

#. F√ºhren Sie den Code aus.

   Um das Skript auszuf√ºhren, klicken Sie auf die Schaltfl√§che **Aktuelles Skript ausf√ºhren** oder dr√ºcken Sie F5.

   .. image:: img/05_run_it.png

   Wenn der Code Informationen enth√§lt, die gedruckt werden m√ºssen, erscheinen diese im Shell; andernfalls erscheint nur die folgende Information.

   .. code-block:: shell

      >>> %Run -c $EDITOR_CONTENT

   Click **View** -> **Shell** to open the Shell window if it doesn't appear on your Thonny.

   * ``%Run -c $EDITOR_CONTENT`` ist ein Befehl von Thonny, der dem MicroPython-Interpreter auf Ihrem Pico W sagt, den Inhalt des Skriptbereichs - "EDITOR_CONTENT" - auszuf√ºhren.
   * Wenn danach eine Nachricht steht, handelt es sich normalerweise um die Nachricht, die Sie MicroPython zum Drucken mitgeteilt haben, oder um eine Fehlermeldung f√ºr den Code.

   .. raw:: html

      <br/>

#. Beenden Sie die Ausf√ºhrung.

   .. image:: img/05_stop_it.png

   Um die Ausf√ºhrung des Codes zu stoppen, klicken Sie auf die Schaltfl√§che **Halt/Neustart des Backends**. Der Befehl **%RUN -c $EDITOR_CONTENT** verschwindet nach dem Stoppen.

#. Speichern oder Speichern unter

   √Ñnderungen am ge√∂ffneten Beispiel k√∂nnen Sie durch Dr√ºcken von **Strg+S** oder durch Klicken auf die Schaltfl√§che **Speichern** in Thonny speichern.

   Der Code kann als separate Datei auf dem Raspberry Pi Pico W gespeichert werden, indem Sie auf **Datei** -> **Speichern unter** klicken.

   .. image:: img/05_save_as.png

   W√§hlen Sie **Raspberry Pi Pico** aus.

   .. image:: img/05_sec_pico.png

   Klicken Sie dann nach Eingabe des Dateinamens und der Erweiterung **.py** auf **OK**. Auf dem Laufwerk des Raspberry Pi Pico W sehen Sie Ihre gespeicherte Datei.

   .. image:: img/05_sec_name.png

   .. note::
       Unabh√§ngig davon, welchen Namen Sie Ihrem Code geben, ist es am besten, zu beschreiben, um welche Art von Code es sich handelt, und ihm keinen bedeutungslosen Namen wie ``abc.py`` zu geben.
       Wenn Sie den Code als ``main.py`` speichern, wird er automatisch ausgef√ºhrt, wenn die Stromversorgung eingeschaltet wird.


Datei erstellen und ausf√ºhren
-------------------------------------

Der Code wird direkt im Codeabschnitt angezeigt. Sie k√∂nnen ihn in Thonny kopieren und wie folgt ausf√ºhren.

#. Eine neue Datei erstellen

   √ñffnen Sie die Thonny IDE, klicken Sie auf die Schaltfl√§che **Neu**, um eine neue leere Datei zu erstellen.

   .. image:: img/new_file.png

#. Code kopieren

   Kopieren Sie den Code aus dem Projekt in die Thonny IDE.

   Zum Beispiel:

   .. code:: python

      import machine
      import utime
      
      led = machine.Pin("LED", machine.Pin.OUT)
      while True:
          led.value(1)
          utime.sleep(2)
          led.value(0)
          utime.sleep(2)

   .. image:: img/05_2_copy_file.png

#. Richtigen Interpreter ausw√§hlen

   Schlie√üen Sie den Pico W mit einem Micro-USB-Kabel an Ihren Computer an und w√§hlen Sie den Interpreter "MicroPython (Raspberry Pi Pico)" in der unteren rechten Ecke aus.

   .. image:: img/05_2_sec_inter.png

#. Code ausf√ºhren

   Sie k√∂nnen auf **Aktuelles Skript ausf√ºhren** klicken oder einfach F5 dr√ºcken, um ihn auszuf√ºhren. 

   Dieser Code ist darauf ausgelegt, die onboard LED des Pico alle zwei Sekunden ein- und auszuschalten, um einen Blink-Effekt zu erzeugen. Sobald der Code ausgef√ºhrt wird, beobachten Sie das entsprechende Blink-Ph√§nomen.

   .. image:: img/05_2_run_it.png

#. Ausf√ºhrung stoppen

   Um den Code zu stoppen, klicken Sie auf die Schaltfl√§che **Stoppen/Neustart des Backends**. 
   
   .. image:: img/05_2_stop_it.png

#. Code speichern

   Sie k√∂nnen auf die Schaltfl√§che **Speichern** klicken, um den Code zu speichern.

   .. image:: img/05_2_save_code.png

   Anschlie√üend fragt Thonny Sie, wohin der Code gespeichert werden soll. Sie k√∂nnen w√§hlen, den Code direkt auf dem Pico zu speichern.

   .. image:: img/05_sec_pico.png

   Klicken Sie dann nach Eingabe des Dateinamens und der Erweiterung .py auf **OK**. 

   .. image:: img/05_2_save_code_2.png

   .. note::
       Unabh√§ngig davon, welchen Namen Sie Ihrem Code geben, ist es am besten, zu beschreiben, um welche Art von Code es sich handelt, und ihm keinen bedeutungslosen Namen wie ``abc.py`` zu geben.
       Wenn Sie den Code als ``main.py`` speichern, wird er automatisch ausgef√ºhrt, wenn die Stromversorgung eingeschaltet wird.

#. Datei √∂ffnen

   Hier sind zwei M√∂glichkeiten, eine gespeicherte Code-Datei zu √∂ffnen.

   * Die erste Methode besteht darin, auf das √ñffnungssymbol in der Thonny-Symbolleiste zu klicken. Genau wie beim Speichern eines Programms werden Sie gefragt, ob Sie es von **diesem Computer** oder **Raspberry Pi Pico** √∂ffnen m√∂chten. Klicken Sie zum Beispiel auf **Raspberry Pi Pico**, und Sie sehen eine Liste aller Programme, die Sie auf dem Pico W gespeichert haben.

     .. image:: img/05_2_open_file.png

   * Die zweite M√∂glichkeit besteht darin, die Dateivorschau direkt zu √∂ffnen, indem Sie auf **Ansicht** -> **Datei** -> und dann doppelklicken auf die entsprechende ``.py``-Datei klicken, um sie zu √∂ffnen.

     .. image:: img/05_2_file_view.png

