 .. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!


Einf√ºhrung in MicroPython
======================================

MicroPython ist eine Softwareimplementierung einer Programmiersprache, die weitgehend mit Python 3 kompatibel ist und in C geschrieben wurde. Sie ist optimiert, um auf einem Mikrocontroller ausgef√ºhrt zu werden.

MicroPython besteht aus einem Python-Compiler, der Bytecode erzeugt, und einem Laufzeitinterpreter f√ºr diesen Bytecode. Dem Benutzer wird ein interaktiver Prompt (REPL) pr√§sentiert, um unterst√ºtzte Befehle sofort ausf√ºhren zu k√∂nnen. Enthalten sind eine Auswahl von Kern-Python-Bibliotheken; MicroPython umfasst Module, die dem Programmierer Zugriff auf hardwarenahe Funktionen bieten.

* Referenz: `MicroPython - Wikipedia <https://en.wikipedia.org/wiki/MicroPython>`_

Die Geschichte beginnt hier
--------------------------------

2013 √§nderte sich einiges, als Damien George eine Crowdfunding-Kampagne (Kickstarter) startete.

Damien war Student an der Universit√§t Cambridge und leidenschaftlicher Programmierer im Bereich Robotik. Er wollte die Welt von Python von einer Gigabyte-Maschine auf ein Kilobyte reduzieren. Seine Kickstarter-Kampagne sollte seine Entwicklung unterst√ºtzen, w√§hrend er seinen Proof of Concept in eine fertige Implementierung umsetzte.

MicroPython wird von einer vielf√§ltigen Pythonista-Community unterst√ºtzt, die ein gro√ües Interesse daran hat, dass das Projekt erfolgreich ist.

Neben dem Testen und Unterst√ºtzen der Code-Basis stellten die Entwickler Tutorials, Code-Bibliotheken und Hardware-Portierungen bereit, sodass Damien sich auf andere Aspekte des Projekts konzentrieren konnte.

* Referenz: `realpython <https://realpython.com/micropython/>`_

Warum MicroPythonÔºü
--------------------------

Obwohl die urspr√ºngliche Kickstarter-Kampagne MicroPython als Entwicklungsplatine "pyboard" mit STM32F4 ver√∂ffentlichte, unterst√ºtzt MicroPython viele ARM-basierte Produktarchitekturen. Die offiziell unterst√ºtzten Ports sind ARM Cortex-M (viele STM32-Boards, TI CC3200/WiPy, Teensy-Boards, Nordic nRF-Serie, SAMD21 und SAMD51), ESP8266, ESP32, 16-Bit-PIC, Unix, Windows, Zephyr und JavaScript.
Zweitens erm√∂glicht MicroPython ein schnelles Feedback. Dies liegt daran, dass Sie REPL verwenden k√∂nnen, um Befehle interaktiv einzugeben und Antworten zu erhalten. Sie k√∂nnen sogar Code anpassen und sofort ausf√ºhren, anstatt den Code-Kompilierungs-Upload-Ausf√ºhrungszyklus durchlaufen zu m√ºssen.

Obwohl Python dieselben Vorteile bietet, sind einige Mikrocontrollerplatinen wie das Raspberry Pi Pico klein, einfach und haben nur wenig Speicher, um die Python-Sprache √ºberhaupt auszuf√ºhren. Deshalb hat sich MicroPython weiterentwickelt, indem es die wichtigsten Python-Funktionen beibeh√§lt und eine Reihe neuer Funktionen hinzuf√ºgt, um mit diesen Mikrocontrollerplatinen zu arbeiten.

Als N√§chstes lernen Sie, MicroPython auf dem Raspberry Pi Pico zu installieren.
